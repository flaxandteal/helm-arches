# TODO: decide whether these should be directly parsed to/from the optional ingress also
domainNames: arches.example.org

global:
  postgresql:
    postgresqlUsername: postgres
    postgresqlPassword: postgres # RMV
    postgresqlDatabase: postgres

secretEnv: {}

replicaCount: 1

image:
  repository: flaxandteal/arches
  pullPolicy: IfNotPresent

imageStatic:
  repository: flaxandteal/arches-static
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

# Subcharts

postgresql:
  image:
    repository: postgis/postgis
    tag: "12-3.0-alpine"

  securityContext:
    runAsUser: 0
    fsGroup: 0

  extraEnv:
    - name: POSTGRES_MULTIPLE_EXTENSIONS
      value: postgis,postgis_topology
  initdbScriptsConfigMap: "{{ .Release.Name }}-arches-init-db"

couchdb:
  adminUsername: admin
  couchdbConfig:
    couchdb:
      uuid: <YOUR_NEW_COUCHDB_UUID>
